@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link text-dark" style="color:white !important" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
            <form id="logoutForm" style="color:white !important" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" style="color:white !important" class="nav-link btn btn-link text-dark border-0"><i class="bi bi-box-arrow-right me-1"></i> Logout</button>

        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link text-dark" style="color:white !important" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="bi bi-person-plus me-1"></i> <strong>Register</strong> </a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-dark" id="login" style="color:white !important" asp-area="Identity" asp-page="/Account/Login"><i class="bi bi-box-arrow-in-right me-1"></i> <strong>Login</strong></a>
    </li>
}
</ul>
